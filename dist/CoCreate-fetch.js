(function webpackUniversalModuleDefinition(root, factory) {
	if(typeof exports === 'object' && typeof module === 'object')
		module.exports = factory();
	else if(typeof define === 'function' && define.amd)
		define([], factory);
	else if(typeof exports === 'object')
		exports["fetch"] = factory();
	else
		root["CoCreate"] = root["CoCreate"] || {}, root["CoCreate"]["fetch"] = factory();
})(this, function() {
return /******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = "../CoCreate-components/CoCreate-fetch/src/CoCreate-fetch.js");
/******/ })
/************************************************************************/
/******/ ({

/***/ "../CoCreate-components/CoCreate-fetch/src/CoCreate-fetch.js":
/*!*******************************************************************!*\
  !*** ../CoCreate-components/CoCreate-fetch/src/CoCreate-fetch.js ***!
  \*******************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/defineProperty */ \"../node_modules/@babel/runtime/helpers/defineProperty.js\");\n/* harmony import */ var _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0__);\n\nvar CoCreateFetch = {\n  selector: '[data-template_id][data-fetch_collection]',\n  items: [],\n  init: function init() {\n    this.initElement();\n\n    this.__initSocketEvent();\n\n    this.__initEvents();\n  },\n  initElement: function initElement(container) {\n    var mainContainer = container || document;\n    var self = this;\n\n    if (!mainContainer.querySelectorAll) {\n      return;\n    }\n\n    var wrappers = mainContainer.querySelectorAll(this.selector);\n\n    if (wrappers.length == 0 && mainContainer != document && mainContainer.hasAttribute('data-template_id') && mainContainer.hasAttribute('data-fetch_collection')) {\n      wrappers = [mainContainer];\n    }\n\n    wrappers.forEach(function (wrapper) {\n      self.__initEachElement(wrapper, true, true);\n    });\n  },\n  refershElement: function refershElement(mutation) {\n    var target = mutation.target;\n    if (!target) return;\n    if (!target.hasAttribute('data-fetch_collection')) return;\n\n    this.__initEachElement(target, false, false, true);\n  },\n  //. public functions....\n  reload: function reload(element) {\n    return;\n\n    if (!element || !element.getAttribute) {\n      return;\n    }\n\n    if (element.hasAttribute('date-template_id') && element.hasAttribute('date-fetch_collection')) {\n      this.__initEachElement(element, true);\n    }\n  },\n  __initSocketEvent: function __initSocketEvent() {\n    var self = this;\n    CoCreate.socket.listen('readDocumentList', function (data) {\n      self.__fetchedItem(data);\n    });\n    CoCreate.socket.listen('readCollectionList', function (data) {\n      self.__fetchedItem(data);\n    });\n    CoCreate.socket.listen('createDocument', function (data) {\n      self.__createItem(data);\n    });\n    CoCreate.socket.listen('deleteDocument', function (data) {\n      self.__deleteItem(data);\n    });\n  },\n  __initEvents: function __initEvents() {\n    var self = this;\n    window.addEventListener('dndsuccess', function (e) {\n      var _e$detail = e.detail,\n          dropedEl = _e$detail.dropedEl,\n          dragedEl = _e$detail.dragedEl;\n      var dragedElTemplatId = dragedEl.getAttribute('data-template_id');\n      var dragElTemplate = document.querySelector(\"[data-fetch_collection][data-template_id='\".concat(dragedElTemplatId, \"']\"));\n      var dropElTemplate = self.findTemplateElByChild(dropedEl);\n\n      if (!dragElTemplate || !dropElTemplate) {\n        return;\n      }\n\n      if (!dragElTemplate.isSameNode(dropElTemplate)) {\n        //. save template id\n        self.updateParentTemplateOfChild(dropElTemplate, dragedEl); //. reordering\n\n        self.reorderChildrenOfTemplate(dragElTemplate);\n        self.reorderChildrenOfTemplate(dropElTemplate);\n      } else {\n        self.reorderChildrenOfTemplate(dropElTemplate);\n      }\n    });\n  },\n  __initEachElement: function __initEachElement(element, isInit, checkInit, refresh) {\n    var item_id = element.getAttribute('data-template_id');\n    if (!item_id) return;\n    if (!element.getAttribute('data-fetch_collection')) return;\n\n    if (CoCreate.observer.getInitialized(element, 'fetch') && isInit) {\n      return;\n    }\n\n    var item = CoCreate.filter.getObjectByFilterId(this.items, item_id);\n    var filter = null;\n    var self = this;\n\n    if (isInit && item) {\n      return;\n    } // if (checkInit) {  \n\n\n    CoCreate.observer.setInitialized(element, 'fetch'); // }\n\n    if (!item) {\n      filter = CoCreate.filter.setFilter(element, \"data-template_id\", \"template\");\n      var fetch_type = element.getAttribute('data-fetch_value_type') || \"string\";\n      if (!filter) return;\n\n      if (fetch_type === 'collection') {\n        filter.is_collection = true;\n      }\n\n      item = {\n        el: element,\n        filter: filter,\n        templateId: item_id,\n        fetch_type: fetch_type\n      };\n      this.items.push(item);\n      element.addEventListener(\"changeFilterInput\", function (e) {\n        self.__removeOldData(item.el);\n\n        item.filter.startIndex = 0;\n        item.filter.isRefresh = true;\n        CoCreate.filter.fetchData(item.filter);\n      });\n    } else {\n      filter = item.filter;\n      CoCreate.filter.changeCollection(filter);\n\n      if (refresh) {\n        item.filter.isRefresh = true;\n\n        self.__removeOldData(element);\n\n        filter.isRefresh = true;\n        filter.startIndex = 0;\n      }\n    }\n\n    CoCreate.filter.fetchData(filter);\n  },\n  __runLoadMore: function __runLoadMore(templateId) {\n    if (!templateId) return;\n    var item = CoCreate.filter.getObjectByFilterId(this.items, templateId);\n    if (!item) return;\n\n    if (item.filter.count > 0) {\n      CoCreate.filter.fetchData(item.filter);\n    }\n  },\n  __removeOldData: function __removeOldData(wrapper) {\n    var item_id = wrapper.getAttribute('data-template_id');\n    var elements = wrapper.querySelectorAll(\"[templateId='\" + item_id + \"']\");\n    elements.forEach(function (el) {\n      return el.remove();\n    });\n  },\n  __cloneElement: function __cloneElement(clone_node, templateId, type) {\n    var itemTemplateDiv = document.createElement(clone_node.parentNode.tagName || 'div'); // let itemTemplateDiv = document.createElement('tbody');\n\n    var template = clone_node.cloneNode(true);\n    template.setAttribute('templateId', templateId);\n    if (!type) type = \"data\";\n\n    if (!template.getAttribute('data-render_array')) {\n      template.setAttribute('data-render_array', type);\n    }\n\n    itemTemplateDiv.appendChild(template.cloneNode(true));\n    return itemTemplateDiv;\n  },\n  __renderData: function __renderData(wrapper, data) {\n    var type = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : \"data\";\n    var templateId = wrapper.getAttribute('data-template_id');\n    var template = wrapper.querySelector(\".template[data-template_id='\".concat(templateId, \"'\")); // || wrapper.querySelector('.template');\n    // let template = wrapper.querySelector('.template');\n\n    if (!template) {\n      return;\n    }\n\n    var renderId = wrapper.getAttribute('data-render_id');\n    var passTo = wrapper.getAttribute('data-pass_to');\n    var renderData = renderId ? _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0___default()({}, renderId, data) : data;\n    type = type || \"data\";\n    type = renderId ? \"\".concat(renderId, \".\").concat(type) : type;\n\n    var cloneWrapper = this.__cloneElement(template, templateId, type); // CoCreate.render.setValue(cloneWrapper.children, renderData, passTo, cloneWrapper);\n\n\n    CoCreate.render.data({\n      elements: cloneWrapper.children,\n      data: renderData,\n      passTo: passTo\n    });\n    var removeableTemplate = cloneWrapper.querySelector(\".template[data-template_id=\\\"\".concat(templateId, \"\\\"]\"));\n\n    if (removeableTemplate) {\n      removeableTemplate.remove();\n    } else {\n      return;\n    }\n\n    template.insertAdjacentHTML('beforebegin', cloneWrapper.innerHTML);\n    var evt = new CustomEvent('fetchedTemplate', {\n      bubbles: true\n    });\n    wrapper.dispatchEvent(evt); /// init passValueBtns\n\n    var forms = wrapper.parentNode.getElementsByTagName('form');\n\n    for (var i = 0; i < forms.length; i++) {\n      var form = forms[i];\n      var valuePassBtn = form.querySelector('.passValueBtn');\n      if (valuePassBtn) CoCreate.logic.__registerValuePassBtnEvent(form, valuePassBtn);\n    } // this.initElement(wrapper)\n\n  },\n  __deleteItem: function __deleteItem(data) {\n    var collection = data['collection'];\n    var document_id = data['document_id'];\n\n    for (var i = 0; i < this.items.length; i++) {\n      var item = this.items[i];\n\n      if (item.filter.collection == collection) {\n        var tmpId = item.el.getAttribute('data-template_id');\n        var els = item.el.querySelectorAll(\"[templateId='\" + tmpId + \"'][data-document_id='\" + document_id + \"']\");\n\n        for (var j = 0; j < els.length; j++) {\n          els[j].remove();\n          item.startIndex--;\n        }\n      }\n    }\n  },\n  __fetchedItem: function __fetchedItem(data) {\n    var item_id = data['element'];\n    var item = CoCreate.filter.getObjectByFilterId(this.items, item_id);\n\n    if (item) {\n      item.filter.startIndex += data['data'].length;\n      var fetch_name = item.el.getAttribute('data-fetch_name');\n\n      if (fetch_name) {\n        data = data.data[0];\n      }\n\n      if (data) {\n        if (data.metadata && data.metadata.isRefresh) {\n          this.__removeOldData(item.el);\n        }\n\n        this.__renderData(item.el, data, fetch_name);\n      }\n    }\n  },\n  __createItem: function __createItem(data) {\n    var collection = data['collection'];\n    var self = this;\n    var itemData = data.data;\n    var render_data = data;\n    render_data.data = [itemData];\n    this.items.forEach(function (item) {\n      var filter = item.filter;\n      var ids = [];\n      item.fetch_ids = [];\n\n      if (filter.collection === collection && !item.el.getAttribute('data-fetch_name') && self.__checkItemByFilters(itemData, filter.filters)) {\n        // ids.push(data['document_id']);\n        self.__renderData(item.el, render_data);\n      }\n    });\n  },\n  findTemplateElByChild: function findTemplateElByChild(element) {\n    return CoCreate.utils.getParentFromElement(element, null, ['data-template_id', 'data-fetch_collection']);\n  },\n  updateParentTemplateOfChild: function updateParentTemplateOfChild(template, element) {\n    var name = template.getAttribute('data-filter_name');\n    var value = template.getAttribute('data-filter_value');\n    var operator = template.getAttribute('data-filter_operator');\n    if (!name || operator != \"$eq\") return;\n    CoCreate.crdt.replaceText({\n      collection: template.getAttribute('data-fetch_collection'),\n      document_id: element.getAttribute('data-document_id'),\n      name: name,\n      value: value,\n      broadcast: false,\n      update_crud: true\n    });\n  },\n  reorderChildrenOfTemplate: function reorderChildrenOfTemplate(template) {\n    var orderField = template.getAttribute('data-order_by');\n    var template_id = template.getAttribute('data-template_id');\n\n    if (!orderField || !template_id) {\n      return;\n    }\n\n    var children = template.querySelectorAll(\"[data-template_id=\\\"\".concat(template_id, \"\\\"][data-document_id]:not(.template)\"));\n    var coff = template.getAttribute('data-order_type') !== 'asc' ? -1 : 1;\n    children.forEach(function (item, index) {\n      if (item.classList.contains('template')) {\n        return;\n      }\n\n      CoCreate.crdt.replaceText({\n        collection: template.getAttribute('data-fetch_collection'),\n        document_id: item.getAttribute('data-document_id'),\n        name: orderField,\n        value: index * coff,\n        broadcast: false,\n        update_crud: true\n      });\n    });\n  },\n  __checkItemByFilters: function __checkItemByFilters(item, filters) {\n    //. $contain, $range, $eq, $ne, $lt, $lte, $gt, $gte, $in, $nin, $geoWithin\n    var flag = true;\n\n    if (!item || !filters) {\n      return false;\n    }\n\n    if (Array.isArray(item)) return false;\n    filters.forEach(function (_ref2) {\n      var name = _ref2.name,\n          operator = _ref2.operator,\n          type = _ref2.type,\n          value = _ref2.value;\n      var fieldValue = item[name];\n      if (!flag) return;\n\n      switch (operator) {\n        case '$contain':\n          if (!Array.isArray(fieldValue) || !fieldValue.some(function (x) {\n            return value.includes(x);\n          })) flag = false;\n          break;\n\n        case '$range':\n          if (value[0] !== null && value[1] !== null) {\n            if (value[0] > fieldValue || value[1] <= fieldValue) flag = false;\n          } else if (item.value[0] == null && value[1] >= fieldValue) {\n            flag = false;\n          } else if (item.value[1] == null && value[0] <= fieldValue) {\n            flag = false;\n          }\n\n          break;\n\n        case '$eq':\n          if (fieldValue != value[0]) flag = false;\n          break;\n\n        case '$ne':\n          if (fieldValue == null || fieldValue == value[0]) flag = false;\n          break;\n\n        case '$lt':\n          if (fieldValue >= value[0]) flag = false;\n          break;\n\n        case '$lte':\n          if (fieldValue > value[0]) flag = false;\n          break;\n\n        case '$gt':\n          if (fieldValue <= value[0]) flag = false;\n          break;\n\n        case '$gte':\n          if (fieldValue < value[0]) flag = false;\n          break;\n\n        case '$in':\n          if (!Array.isArray(fieldValue) || !fieldValue.some(function (x) {\n            return value.includes(x);\n          })) flag = false;\n          break;\n\n        case '$nin':\n          if (Array.isArray(fieldValue) && fieldValue.some(function (x) {\n            return value.includes(x);\n          })) flag = false;\n          break;\n      }\n    });\n    return flag;\n  }\n};\nCoCreate.observer.init({\n  name: 'CoCreateFetchObserver',\n  observe: ['attributes'],\n  attributes: ['data-fetch_collection', 'data-filter_name'],\n  callback: function callback(mutation) {\n    CoCreateFetch.refershElement(mutation);\n  }\n});\nCoCreate.observer.init({\n  name: 'CoCreateFetchInit',\n  observe: ['subtree', 'childList'],\n  include: \"[data-fetch_collection]\",\n  callback: function callback(mutation) {\n    CoCreateFetch.initElement(mutation.target);\n  }\n});\nCoCreateFetch.init();\n/* harmony default export */ __webpack_exports__[\"default\"] = (CoCreateFetch);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///../CoCreate-components/CoCreate-fetch/src/CoCreate-fetch.js\n");

/***/ }),

/***/ "../node_modules/@babel/runtime/helpers/defineProperty.js":
/*!****************************************************************!*\
  !*** ../node_modules/@babel/runtime/helpers/defineProperty.js ***!
  \****************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nmodule.exports = _defineProperty;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9Db0NyZWF0ZS5mZXRjaC8uLi9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9kZWZpbmVQcm9wZXJ0eS5qcz8zYWYwIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMLEdBQUc7QUFDSDtBQUNBOztBQUVBO0FBQ0E7O0FBRUEiLCJmaWxlIjoiLi4vbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZGVmaW5lUHJvcGVydHkuanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJmdW5jdGlvbiBfZGVmaW5lUHJvcGVydHkob2JqLCBrZXksIHZhbHVlKSB7XG4gIGlmIChrZXkgaW4gb2JqKSB7XG4gICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KG9iaiwga2V5LCB7XG4gICAgICB2YWx1ZTogdmFsdWUsXG4gICAgICBlbnVtZXJhYmxlOiB0cnVlLFxuICAgICAgY29uZmlndXJhYmxlOiB0cnVlLFxuICAgICAgd3JpdGFibGU6IHRydWVcbiAgICB9KTtcbiAgfSBlbHNlIHtcbiAgICBvYmpba2V5XSA9IHZhbHVlO1xuICB9XG5cbiAgcmV0dXJuIG9iajtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBfZGVmaW5lUHJvcGVydHk7Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///../node_modules/@babel/runtime/helpers/defineProperty.js\n");

/***/ })

/******/ })["default"];
});